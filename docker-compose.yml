services:
  # 1. CMS
  drupal:
    build:
      context: ./services/drupal
    environment:
      DRUPAL_DB: $DRUPAL_DB
      DRUPAL_DB_USER: $DRUPAL_DB_USER
      DRUPAL_DB_PASSWORD: $DRUPAL_DB_PASSWORD
      DRUPAL_USER: $DRUPAL_USER
      DRUPAL_PASSWORD: $DRUPAL_PASSWORD
    ports:
      - 1080:80
    volumes:
      - ./services/drupal/files:/var/www/html/sites/default/files:rw,delegated
    depends_on:
      - drupal_postgres

  drupal_postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: $DRUPAL_DB
      POSTGRES_USER: $DRUPAL_DB_USER
      POSTGRES_PASSWORD: $DRUPAL_DB_PASSWORD
    volumes:
      - ./services/postgres/data/drupal:/var/lib/postgresql/data
    ports:
      - 1432:5432

  # 2. Ecommerce engine
  prestashop:
    build:
      context: ./
      dockerfile: ./services/prestashop/Dockerfile
    ports:
      - 443:443
    environment:
      DB_SERVER: prestashop_mariadb
      DB_NAME: $PRESTASHOP_DB
      DB_USER: $PRESTASHOP_DB_USER
      DB_PASSWD: $PRESTASHOP_DB_PASSWORD
      PS_DEMO_MODE: 1
      PS_INSTALL_AUTO: 1
      PS_SSL_ENABLED: 1
      PS_SSL_ENABLED_EVERYWHERE: 1
      PS_WEBSERVICE: 1
      PS_DOMAIN: localhost:443
      ADMIN_MAIL: $ADMIN_MAIL
      ADMIN_PASSWD: $ADMIN_PASSWD
      PS_FOLDER_ADMIN: backoffice
    depends_on:
      - prestashop_mariadb

  prestashop_mariadb:
    image: mariadb:11.5
    environment:
      MYSQL_ROOT_PASSWORD: $PRESTASHOP_DB_PASSWORD
      MYSQL_USER: $PRESTASHOP_DB_USER
      MYSQL_PASSWORD: $PRESTASHOP_DB_PASSWORD
      MYSQL_DATABASE: $PRESTASHOP_DB
    ports:
      - 2306:3306
    volumes:
      - ./services/mariadb/data/prestashop:/var/lib/mysql

  # 3. Apigateway
  apisix:
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.11.0-redhat}
    volumes:
      - ./services/apisix/apisix.yml:/usr/local/apisix/conf/apisix.yaml:ro
    environment:
      - APISIX_STAND_ALONE=true
    env_file:
      - .env
    ports:
      - "3180:9180/tcp"
      - "9080:9080/tcp"
      - "3091:9091/tcp"
      - "3443:9443/tcp"
      - "3092:9092/tcp"
    depends_on:
      - zipkin
      - keycloak

  # 4. Integrator
  camel:
    build:
      context: ./
      dockerfile: ./services/camel/Dockerfile
    volumes:
      - ./services/camel/routes:/root/camel/routes
    command: ["tail", "-f", "/dev/null"]

  # 5. IAM
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    command: start
    environment:
      KC_HOSTNAME: keycloak
      KC_HTTP_PORT: 5080
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak_postgres/${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    ports:
      - 5080:5080
    depends_on:
      - keycloak_postgres
      - mailpit

  keycloak_postgres:
    image: postgres:16
    volumes:
      - ./services/postgres/data/keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    ports:
      - 5032:5432

  # 6. Backoffice
  backoffice:
    build:
      context: ./services/backoffice
    ports:
      - 6001:3000
    volumes:
      - ./services/backoffice/app:/backoffice/app
      - ./services/backoffice/components:/backoffice/components
      - ./services/backoffice/config:/backoffice/config
      - ./services/backoffice/public:/backoffice/public
      - ./services/backoffice/styles:/backoffice/styles
      - ./services/backoffice/types:/backoffice/types

  # 7. Python microservice
  python:
    build:
      context: ./
      dockerfile: ./services/python/Dockerfile
    volumes:
      - ./services/python/app:/code/app
    env_file:
      - .env
    ports:
      - 7000:80
    depends_on:
      - keycloak

  # 8. Storefront
  storefront:
    build:
      context: ./services/storefront
    env_file:
      - ./services/storefront/composable-ui/.env.development
    ports:
      - 8000:80

  # 9. Platform services

  # 9.1 SMTP service
  mailpit:
    image: axllent/mailpit:v1.21
    volumes:
      - ./services/mailpit/data:/data
    ports:
      - 8025:8025
      - 9025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  # 9.2 Tracing service
  zipkin:
    image: openzipkin/zipkin:3
    ports:
      - 9411:9411

  # 9.3 Test HTTP Request & Response Service
  httpbin:
    image: kennethreitz/httpbin
    ports:
      - 980:80
